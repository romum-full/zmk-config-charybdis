#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>


&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <32 33>;
        };

        scroll {
            bindings = <&mo 4>;
            key-positions = <31 32 33>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <42 43>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        quicker: quicker {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LCTRL>, <&macro_press>;

            label = "QUICKER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC           &kp N1   &kp N2   &kp N3      &kp N4     &kp N5          &kp N6         &kp N7     &kp N8     &kp N9      &kp N0     &kp BACKSPACE
&kp TAB           &kp Q    &kp W    &kp E       &kp R      &kp T           &kp Y          &kp U      &kp I      &kp O       &kp P      &kp DELETE
&kp LEFT_SHIFT    &kp A    &kp S    &kp D       &kp F      &kp G           &kp H          &kp J      &lt 3 K    &kp L       &kp SEMI   &kp APOS
&kp LEFT_CONTROL  &lt 3 Z  &lt 5 X  &kp C       &kp V      &kp B           &kp N          &kp M      &kp COMMA  &kp PERIOD  &kp SLASH  &kp RIGHT_ALT
                                    &lt 2 LGUI  &kp ENTER  &kp LEFT_ALT    &mo 1          &kp SPACE
                                                &mo 4      &tog 6          &kp BACKSPACE
            >;
        };

        layer_1 {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp DOLLAR             &kp PERCENT       &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp CARET  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp N7        &kp N8         &kp N9        &none                 &none                  &none
&kp PLUS   &kp MINUS        &kp EQUAL     &kp LBKT              &kp RBKT               &none             &kp N4        &kp N5         &kp N6        &none                 &none                  &none
&none      &none            &none         &kp LEFT_BRACE        &kp RIGHT_BRACE        &none             &kp NUMBER_1  &kp N2         &kp N3        &none                 &kp N0                 &none
                                          &none                 &none                  &trans            &none         &none
                                                                &none                  &none             &trans
            >;
        };

        layer_2 {
            bindings = <
&none         &kp F1  &kp F2         &kp F3     &kp F4     &kp F5               &kp F6  &kp F7              &kp F8              &kp F9               &kp F10  &none
&kp C_VOL_UP  &none   &none          &kp UP     &none      &none                &none   &none               &kp LG(UP_ARROW)    &kp F11              &kp F12  &none
&kp C_VOL_DN  &none   &kp LEFT       &kp DOWN   &kp RIGHT  &none                &none   &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &none    &none
&kp K_MUTE    &none   &kp LC(LS(T))  &kp LC(W)  &kp LC(T)  &kp LG(LS(RIGHT))    &none   &mkp MB5            &mkp MB4            &none                &none    &kp LA(F4)
                                     &trans     &trans     &none                &none   &none
                                                &trans     &trans               &none
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
&none  &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
                         &mo 4      &none      &none    &none  &none
                                    &none      &none    &none
            >;
        };

        Scroll {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Snipe {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        game {
            bindings = <
&kp ESC           &trans           &kp N1  &kp N2  &kp N3        &kp N4    &trans         &trans  &trans  &trans  &trans  &none
&none             &kp TAB          &kp Q   &kp W   &kp E         &kp R     &trans         &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_SHIFT   &kp A   &kp S   &kp D         &kp F     &trans         &kp J   &trans  &kp L   &trans  &trans
&kp LEFT_ARROW    &kp RIGHT_ARROW  &kp X   &kp C   &kp V         &kp B     &kp LA(LC(S))  &kp M   &trans  &trans  &trans  &kp LA(F4)
                                           &kt T   &kp SPACE     &kp Z     &trans         &trans
                                                   &kp LEFT_ALT  &tog 6    &trans
            >;
        };
    };
};
