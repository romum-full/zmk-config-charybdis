#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        b {
            bindings = <&kp B>;
            key-positions = <42 43>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <39 40>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TILDE  &kp N1          &kp N2          &kp N3              &kp N4            &kp N5    &kp N6         &kp N7             &kp N8              &kp N9           &kp N0              &kp MINUS
&kp TAB    &kp Q           &kp W           &kp E               &kp R             &kp T     &kp Y          &kp U              &kp I               &kp O            &kp P               &kp EQUAL
&none      &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G     &kp H          &mt RIGHT_SHIFT J  &mt LEFT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp APOS
&none      &kp Z           &kp X           &kp C               &kp V             &kp B     &kp N          &kp M              &lt 3 COMMA         &lt 4 PERIOD     &lt 5 SLASH         &kp DELETE
                                           &none               &kp ENTER         &none     &kp BACKSPACE  &kp SPACE
                                                               &none             &tog 1    &none
            >;
        };

        game {
            bindings = <
&kp ESC           &trans          &kp N1  &kp N2  &kp N3        &kp N4    &kp LC(LA(S))  &trans     &trans  &trans  &trans  &none
&none             &kp TAB         &kp Q   &kp W   &kp E         &kp R     &trans         &trans     &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F     &trans         &kp J      &trans  &kp L   &trans  &trans
&none             &kp Z           &kp X   &kp C   &kp V         &kp B     &none          &kp M      &trans  &trans  &trans  &kp LA(F4)
                                          &kt T   &kp SPACE     &none     &kp LEFT       &kp RIGHT
                                                  &kp LEFT_ALT  &tog 1    &kp RIGHT
            >;
        };

        layer_1 {
            bindings = <
&none         &kp F1  &kp F2         &kp F3     &kp F4     &kp F5               &kp F6  &kp F7              &kp F8              &kp F9               &kp F10  &kp PRINTSCREEN
&kp C_VOL_UP  &none   &none          &kp UP     &none      &none                &none   &none               &kp LG(UP_ARROW)    &kp F11              &kp F12  &none
&kp C_VOL_DN  &none   &kp LEFT       &kp DOWN   &kp RIGHT  &none                &none   &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &none    &none
&kp K_MUTE    &none   &kp LC(LS(T))  &kp LC(W)  &kp LC(T)  &kp LG(LS(RIGHT))    &none   &mkp MB5            &mkp MB4            &none                &none    &kp LA(F4)
                                     &trans     &trans     &none                &none   &none
                                                &trans     &trans               &none
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
&none  &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
                         &none      &none      &none    &none  &none
                                    &none      &none    &none
            >;
        };

        Scroll {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Snipe {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };
    };
};
